package net.link.safeonline.webapp.common;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import net.link.safeonline.sdk.auth.filter.JAASLoginFilter;import net.link.safeonline.sdk.auth.filter.LoginManager;import net.link.safeonline.wicket.tools.WicketUtil;import org.apache.commons.logging.Log;import org.apache.commons.logging.LogFactory;import org.apache.wicket.Page;import org.apache.wicket.Response;import org.apache.wicket.protocol.http.PageExpiredException;import org.apache.wicket.protocol.http.WebApplication;import org.apache.wicket.protocol.http.WebRequest;import org.apache.wicket.protocol.http.WebRequestCycle;public final class MyRequestCycle extends WebRequestCycle {    private static final Log LOG       = LogFactory.getLog(MyRequestCycle.class);    private boolean          jaasLogin = false;    /**     * MyRequestCycle constructor     *      * @param application     *            the web application     * @param request     *            the web request     * @param response     *            the web response     */    public MyRequestCycle(final WebApplication application, final WebRequest request, final Response response, boolean jaasLogin) {        super(application, request, response);        this.jaasLogin = jaasLogin;    }    /**     * {@inheritDoc}     */    @Override    public final Page onRuntimeException(final Page cause, final RuntimeException e) {        if (e instanceof PageExpiredException)            return null;        return new ErrorPage();    }    /**     * {@inheritDoc}     */    @Override    protected void onBeginRequest() {        if (jaasLogin) {            HttpServletRequest httpServletRequest = WicketUtil.getServletRequest();            String userId = LoginManager.findUserId(httpServletRequest);            if (null != userId) {                JAASLoginFilter.login(httpServletRequest, "client-login", userId);            }        }        super.onBeginRequest();    }    /**     * {@inheritDoc}     */    @Override    protected void onEndRequest() {        if (jaasLogin) {            HttpServletRequest httpServletRequest = WicketUtil.getServletRequest();            JAASLoginFilter.logout(httpServletRequest);            try {                JAASLoginFilter.processFlushJBossCredentialCache(httpServletRequest);            } catch (ServletException e) {                LOG.error("Failed to flush JAAS credential cache: " + e.getMessage(), e);            }        }        super.onEndRequest();    }}