/*
 *   Copyright 2008, Maarten Billemont
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */
package net.link.safeonline.performance.scenario.charts;


/**
 * <h2>{@link ScenarioSpeedChart}<br>
 * <sub>A chart that renders the speed at which the agent was able to execute
 * scenarios.</sub></h2>
 *
 * <p>
 * The chart generated by this module is a line chart depicting the moving
 * average of the scenario execution speed. This basically means the amount of
 * scenarios that were executed in a time frame of one period expressed in
 * <code>scenarios/second</code>.<br>
 * <br>
 * The period is defined in the constructor ({@link #AbstractMovingAverageChart(long)}).
 * </p>
 *
 * <p>
 * <i>Feb 22, 2008</i>
 * </p>
 *
 * @author mbillemo
 */
public class ScenarioSpeedChart extends AbstractMovingAverageChart {

	/**
	 * Create a new {@link ScenarioSpeedChart} instance.
	 */
	public ScenarioSpeedChart(long period) {

		super("Scenario Speed", "Speed (#/s)", period);
	}

	/**
	 * Multiply hits by 1000 and divide by period to obtain hits/s.
	 *
	 * {@inheritDoc}
	 */
	@Override
	protected Number getMovingAverage() {

		return 1000d * this.averageData.size() / this.period;
	}
}
