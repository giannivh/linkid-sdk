#!/bin/bash
source "${0%/*}"/bashlib

[[ $1 = -R ]] && { reverse=1; shift; }
[[ $1 = -a ]] && { apply=1; shift; }

repo="$PWD/${0%/*}/.."
base="${2:-$repo}"
distribution=$1

[[ ! $distribution ]] && {
    distribution=$(cd "$base/safe-online-base-distribution/target/"*"/jboss/server/default/deploy/../../../../"; echo "$PWD")
}
base="$base/work"

[[ ! -d $distribution/jboss/server/default/tmp ]] && {
    emit -r "Invalid distribution path or distribution not deployed: '$distribution'"
    exit 1
}

[[ -x $(type -P readlink 2>/dev/null) ]] && {
    base=$(readlink -m "$base")
    distribution=$(readlink -m "$distribution")
}

[[ $base = /* ]] || base="$PWD/$base"

function extractCss {
    css=( *'/css/style.css' )

    [[ -e $css ]] && \
    mkdir -p "$base/css"                        || return
    (( reverse )) || {
        mv "$css" "$base/css/" && \
        cp "$base/css/${css##*/}"{,~}           || return
    }

    for file in "${css[@]}"; do
        ln -f "$base/css/style.css" "$file"     || return
        touch "$file"                           || return
    done
}

function extractHtml {
    while read file; do
        mkdir -p "$base/${file%/*}"             || return
        (( reverse )) || {
            mv "$file" "$base/$file" && \
            cp "$base/$file"{,~}                || return
        }

        [[ -e "$base/$file" ]] && \
            { ln -f "$base/$file" "$file"       || return; }
        touch "$file"                           || return
    done < <(find . -name '*.xhtml')
}

function extractStuff {

        extractCss && \
        extractHtml
}

if (( ! reverse && ! apply )); then
    [[ -e $base ]] && {
        emit -Y "You already have work files at '$(shorten "$base")'.  Perhaps you meant to use -R?"
        emit -Y "Continuing will delete all these files and replace them by the current server's files."
        echo; ask -!yN "Continue?" || exit
    }

    emit "Cleaning up '$base'" --
        rm -rf "$base"
    emit -$?
fi

if (( reverse )); then
    emit "Linking CSS and XHTML files from '$(shorten "$base")' to '$(shorten "$distribution")'" --
elif (( apply )); then
    emit "Applying CSS and XHTML files from '$(shorten "$base")' to repository" --
else
    emit "Linking CSS and XHTML files from '$(shorten "$distribution")' to '$(shorten "$base")'" --
fi

if (( apply )); then
    cd "$base"
    find . '(' -name '*.xhtml' -o -name '*.css' ')' -print0 | while read -d '' file; do
        [[ -e $file~ ]] || {
            emit -y "Backup of '$(shorten "$file" "$base")' not found."
            continue
        }

        if ! diff -q "$file"{,~} >/dev/null; then
            dest="$repo/${file/-1.0-SNAPSHOT-exp.war//src/main/webapp}"
            echo "$dest"
            if ! [[ -e $dest ]]; then
                dest=( "$repo/"*"/src/main/webapp/${file#$base/}" )

                if (( ! ${#dest[@]} || ${#dest[@]} > 1 )) || [[ ! -e $dest ]]; then
                    emit -y "Source of '$(shorten "$file" "$base")' not found."
                    continue
                fi
            fi

            cp "$file" "$dest"
        fi
    done
else
    cd "$distribution/jboss/server/default/tmp/deploy/"*"SafeOnline.ear-contents/" && \
        extractStuff
fi

emit -$?
